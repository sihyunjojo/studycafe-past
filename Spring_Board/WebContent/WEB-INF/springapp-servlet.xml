<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:jee="http://www.springframework.org/schema/jee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee.xsd"
>
	 <context:component-scan base-package="controller"></context:component-scan>
	 <context:component-scan base-package="service"></context:component-scan>
	 <context:component-scan base-package="dao"></context:component-scan>
	 <context:property-placeholder location = "classpath:config/jdbc1.properties"/>
	
	 <bean name = "/board_insert_form.do"
	 class = "org.springframework.web.servlet.mvc.ParameterizableViewController">
	 	<property name="viewName" value = "boardWriteForm"></property>
	 </bean>
	 <bean id = "jdbcTemplate" class = "org.springframework.jdbc.core.JdbcTemplate">
	 	<constructor-arg ref = "dataSource"></constructor-arg>
	 </bean>
	 
	 <!-- 1. Connection Pool을 지원하지 않는 방식 -->
	 <!-- <bean id = "dataSource" 
	 class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<property name="driverClassName" value = "${jdbc.driver}"></property>
	 	<property name="url" value = "${jdbc.url}"></property>
	 	<property name="username" value = "${jdbc.username}"></property>
	 	<property name="password" value = "${jdbc.password}"></property>
	 </bean> -->
	 
	  <!-- 2. DBCP 를 사용해서 Connection Pool을 지원하는 방식 -->
	<!--  <bean id = "dataSource" 
	 class = "org.apache.commons.dbcp.BasicDataSource">
	 	<property name="driverClassName" value = "${jdbc.driver}"></property>
	 	<property name="url" value = "${jdbc.url}"></property>
	 	<property name="username" value = "${jdbc.username}"></property>
	 	<property name="password" value = "${jdbc.password}"></property>
	 </bean> -->
	 
	   <!-- 3. jndi 를 사용해서 Connection Pool을 지원하는 방식 -->
	<!--  <bean id = "dataSource" 
	 class = "org.springframework.jndi.JndiObjectFactoryBean">
	 	<property name="jndiName" value = "jdbc/jsptest"></property>
	 	<property name="resourceRef" value = "true"></property>
	 </bean> -->
	 <!-- 
	 resourceRef : java:comp/env 의 JNDI를 사용할수 있게 하는 속성
	  -->
	  
	  <!-- jee:jndi-lookup 사용 -->
	  <jee:jndi-lookup jndi-name="/jdbc/jsptest" id = "dataSource"
	  resource-ref = "true"></jee:jndi-lookup>
	 <bean id = "viewResolver" class = "org.springframework.web.servlet.view.InternalResourceViewResolver">
	 	<property name = "prefix" value = "/view/"/>
	 	<property name = "suffix" value = ".jsp"/>
	 </bean>
</beans>
